name: CI for Release Branches with SonarCloud

on:
  push:
    branches:
      - 'main'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: mydatabase
          MYSQL_USER: myuser
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Dockerize
      run: |
        wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
        tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz

    - name: Set up Docker Compose
      run: docker-compose up -d

    - name: Wait for DB to be ready
      run: dockerize -wait tcp://localhost:3306 -timeout 1m

    - name: Run tests
      run: docker-compose exec server npm test

    - name: Stop Docker Compose
      run: docker-compose down

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies for SonarCloud
      run: npm install

    - name: SonarCloud Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
        wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner.zip -d sonar-scanner
        export PATH=$PATH:$(pwd)/sonar-scanner/sonar-scanner-4.6.2.2472-linux/bin
        sonar-scanner \
          -Dsonar.projectKey=your_project_key \
          -Dsonar.organization=your_organization_key \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN